{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","apiServise/apiServise.js","Components/App.js","index.js"],"names":["SearchBar","state","input","heandleInput","currentTarget","setState","value","heandleSubmit","event","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","alt","largePhoto","color","src","datalarge","ImageGallery","photos","query","onClick","map","photo","webformatURL","largeImageURL","id","Button","modalRoot","document","querySelector","Modal","closeEscape","e","code","onClose","window","addEventListener","removeEventListener","createPortal","getPhoto","pageNumber","axios","defaults","baseURL","key","get","then","data","hits","reduce","cleanArray","push","App","searchQuery","page","searchArray","isLoading","showModal","updateQuery","loadMore","prevState","fetchPhotos","finally","target","attributes","closeModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderMoreBtn","length","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.36edac84.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchBar extends Component {\n  state = {\n    input: '',\n  };\n\n  heandleInput = ({ currentTarget }) => {\n    this.setState({ input: currentTarget.value });\n  };\n\n  heandleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.input);\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.heandleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.heandleInput}\n            value={this.state.input}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Loader from 'react-loader-spinner';\n\nconst ImageGalleryItem = ({ image, alt, largePhoto }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <Loader type=\"Oval\" color=\"#3f51b5\" className=\"ImageGalleryItem-loader\" />\n      <img\n        src={image}\n        alt={alt}\n        className=\"ImageGalleryItem-image\"\n        datalarge={largePhoto}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  largePhoto: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nconst ImageGallery = ({ photos, query, onClick }) => {\n  return (\n    <ul className=\"ImageGallery\" onClick={onClick}>\n      {photos.map(photo => (\n        <ImageGalleryItem\n          key={photo.id}\n          image={photo.webformatURL}\n          alt={query}\n          largePhoto={photo.largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  photos: PropTypes.array.isRequired,\n  query: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={onClick}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport Loader from 'react-loader-spinner';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  state = {};\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.closeEscape);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closeEscape);\n  }\n\n  closeEscape = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose(e);\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.props.onClose}>\n        <div className=\"Modal\">\n          <Loader\n            type=\"Oval\"\n            color=\"#3f51b5\"\n            className=\"ImageGalleryItem-loader\"\n          />\n          <img\n            className=\"Modal-image\"\n            src={this.props.largePhoto}\n            alt={this.props.alt}\n          />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  largePhoto: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import axios from 'axios';\n\nfunction getPhoto(query, pageNumber = 1) {\n  axios.defaults.baseURL = 'https://pixabay.com/api';\n  const key = '19379820-4cfc4b0a180a6a272d7492e1f';\n\n  return axios\n    .get(\n      `/?q=${query}&page=${pageNumber}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(({ data }) => data.hits)\n    .then(photos => {\n      return photos.reduce((cleanArray, photo) => {\n        cleanArray.push({\n          id: photo.id,\n          webformatURL: photo.webformatURL,\n          largeImageURL: photo.largeImageURL,\n        });\n        return cleanArray;\n      }, []);\n    });\n}\n\nexport default getPhoto;\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport SearchBar from './SearchBar';\nimport ImageGallery from './ImageGallery';\nimport Button from './Button';\nimport Modal from './Modal';\nimport Loader from 'react-loader-spinner';\n\nimport getPhoto from '../apiServise';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n    searchArray: [],\n    isLoading: false,\n    showModal: false,\n    largePhoto: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.searchQuery !== this.state.searchQuery ||\n      prevState.page !== this.state.page\n    ) {\n      this.fetchPhotos();\n    }\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  updateQuery = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      searchArray: [],\n    });\n  };\n\n  loadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n      isLoading: true,\n    }));\n  };\n\n  fetchPhotos = () => {\n    this.setState({ isLoading: true });\n\n    const { searchQuery, page } = this.state;\n\n    getPhoto(searchQuery, page)\n      .then(photos => {\n        this.setState(prevState => ({\n          searchArray: [...prevState.searchArray, ...photos],\n        }));\n      })\n      .finally(this.setState({ isLoading: false }));\n  };\n\n  showModal = event => {\n    const { datalarge } = event.target.attributes;\n\n    this.setState({\n      showModal: true,\n      largePhoto: datalarge.value,\n    });\n  };\n\n  closeModal = event => {\n    if (event.target === event.currentTarget || event.code === 'Escape') {\n      this.setState({\n        showModal: false,\n        largePhoto: '',\n      });\n    }\n  };\n\n  render() {\n    const {\n      searchQuery,\n      searchArray,\n      isLoading,\n      showModal,\n      largePhoto,\n    } = this.state;\n    const shouldRenderMoreBtn = searchArray.length > 0 && !isLoading;\n\n    return (\n      <>\n        <SearchBar onSubmit={this.updateQuery} />\n\n        {isLoading && (\n          <Loader\n            className=\"Loader\"\n            color=\"#3f51b5\"\n            type=\"TailSpin\"\n            height={60}\n            width={60}\n          />\n        )}\n\n        <ImageGallery\n          photos={this.state.searchArray}\n          query={this.state.searchQuery}\n          onClick={this.showModal}\n        />\n\n        {shouldRenderMoreBtn && <Button onClick={this.loadMore} />}\n\n        {showModal && (\n          <Modal\n            largePhoto={largePhoto}\n            alt={searchQuery}\n            onClose={this.closeModal}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}