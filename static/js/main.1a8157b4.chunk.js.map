{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/Modal.js","apiServise/apiServise.js","App.js","index.js"],"names":["SearchBar","state","input","heandleInput","currentTarget","setState","value","heandleSubmit","event","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","alt","largePhoto","src","datalarge","ImageGallery","photos","query","onClick","map","photo","webformatURL","largeImageURL","id","Button","modalRoot","document","querySelector","Modal","closeEscape","e","code","onClose","window","addEventListener","removeEventListener","createPortal","axios","defaults","baseURL","key","getPhoto","pageNumber","get","then","data","hits","reduce","cleanArray","push","App","searchQuery","page","searchArray","isLoading","showModal","updateQuery","loadMore","prevState","fetchPhotos","finally","target","attributes","closeModal","prevProps","shouldRenderMoreBtn","length","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a8157b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass SearchBar extends Component {\n    state = {\n        input: '',\n    }\n    \n    heandleInput = ({currentTarget}) => {\n        this.setState({input: currentTarget.value})\n    }\n\n    heandleSubmit = (event) => {\n        event.preventDefault();\n        this.props.onSubmit(this.state.input);       \n    }\n\n    render() { \n        return <header className=\"Searchbar\">\n            <form className=\"SearchForm\" onSubmit={this.heandleSubmit}>\n                <button type=\"submit\" className=\"SearchForm-button\">\n                    <span className=\"SearchForm-button-label\">Search</span>\n                </button>\n                <input\n                    className=\"SearchForm-input\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search images and photos\"\n                    onChange={this.heandleInput}\n                    value={this.state.input}\n                />\n            </form>\n        </header>;\n    }\n}\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ image, alt, largePhoto }) => {\n    return <li className=\"ImageGalleryItem\">\n        <img src={ image } alt={ alt } className=\"ImageGalleryItem-image\" datalarge={largePhoto} />\n    </li>\n}\n\nImageGalleryItem.propTypes = {\n    image: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    largePhoto: PropTypes.string.isRequired,\n}\n\nexport default ImageGalleryItem;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nconst ImageGallery = ({photos, query, onClick}) => {\n    return  <ul className=\"ImageGallery\" onClick={ onClick }>\n        {photos.map((photo) => (\n            <ImageGalleryItem key={ photo.id } image={ photo.webformatURL} alt={query} largePhoto={photo.largeImageURL} />\n        )  \n        )}\n    </ul>  \n}\n\nImageGallery.propTypes = {\n    photos: PropTypes.array.isRequired,\n    query: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n             \nexport default ImageGallery;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n    return <button className=\"Button\" type=\"button\" onClick={onClick}>\n        Load more\n        </button>\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default Button;\n","import React, { Component }from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n    state = {}\n    \n    componentDidMount() {\n        window.addEventListener('keydown',this.closeEscape)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.closeEscape)\n    }\n    \n    closeEscape = (e) => {\n        if (e.code === 'Escape') {\n            this.props.onClose(e);\n        }\n    }\n\n    render() { \n        return createPortal(<div className=\"Overlay\" onClick={ this.props.onClose }>\n        <div className=\"Modal\">\n            <img src={ this.props.largePhoto } alt={ this.props.alt }  />\n        </div>\n    </div>, modalRoot)\n    }\n}\n\nModal.propTypes = {\n    largePhoto: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n}\n\nexport default Modal;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api';\nconst key = '19379820-4cfc4b0a180a6a272d7492e1f';\n\nfunction getPhoto(query, pageNumber = 1)  {\n    return axios.get(`/?q=${query}&page=${pageNumber}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`)\n        .then(({ data }) => data.hits)\n        .then((photos) => {\n        return photos.reduce((cleanArray, photo) => { \n          cleanArray.push(\n            {\n              id: photo.id,\n              webformatURL: photo.webformatURL,\n              largeImageURL: photo.largeImageURL\n            })\n          return cleanArray;\n        }, [])\n      });\n}\n\nexport default getPhoto;\n","import React, { Component } from 'react'\n\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport SearchBar from './Components/SearchBar';\nimport ImageGallery from './Components/ImageGallery';\nimport Button from './Components/Button';\nimport Modal from './Components/Modal';\nimport Loader from 'react-loader-spinner';\n\nimport getPhoto from './apiServise';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n    searchArray: [],\n    isLoading: false,\n    showModal: false,\n    largePhoto: '',\n  }\n\n  componentDidUpdate( prevProps, prevState ) {\n    if (prevState.searchQuery !== this.state.searchQuery || prevState.page !== this.state.page) {\n      this.fetchPhotos();\n    }\n  }\n\n  updateQuery = (query) => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      searchArray: [],\n    })\n  }\n\n  loadMore = () => {\n    this.setState((prevState) => ({\n      page: prevState.page + 1,\n    }));\n\n    // window.scrollTo({\n    //   top: document.documentElement.scrollHeight,\n    //   behavior: 'smooth',\n    // });\n  }\n\n  fetchPhotos = () => {\n    this.setState({ isLoading: true });\n\n    const { searchQuery ,page } = this.state;\n\n    getPhoto(searchQuery, page)\n      .then((photos) => {\n      this.setState((prevState) => ({\n        searchArray: [...prevState.searchArray, ...photos],\n      }))\n      }).finally(this.setState({isLoading: false}))\n  }\n\n  showModal = (event) => {\n    const { datalarge } = event.target.attributes;\n\n    this.setState({\n      showModal: true,\n      largePhoto: datalarge.value,\n    })\n  }\n\n  closeModal = (event) => {\n    if (event.target === event.currentTarget || event.code === 'Escape') {\n      this.setState({\n        showModal: false,\n        largePhoto: '',\n      })\n    }\n  }\n\n  render() {\n    const { searchQuery, searchArray, isLoading, showModal, largePhoto } = this.state;\n    const shouldRenderMoreBtn = searchArray.length > 0 && !isLoading;\n\n    return <>\n      <SearchBar onSubmit={this.updateQuery} />\n      \n      {isLoading && <Loader className=\"Loader\" color=\"#3f51b5\" type=\"TailSpin\" height={60} width={60} />}\n      \n      <ImageGallery photos={this.state.searchArray} query={this.state.searchQuery} onClick={this.showModal} /> \n      \n      {shouldRenderMoreBtn && <Button onClick={this.loadMore} />}\n\n      { showModal && <Modal largePhoto={largePhoto} alt={searchQuery} onClose={ this.closeModal }/>}\n      </>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}